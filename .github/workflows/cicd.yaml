name: CI/CD for .NET Core 8.0 Backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up .NET
    - name: Setup .NET Core 8.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.100

    # Install the SonarScanner for .NET tool
    - name: Install SonarScanner for .NET
      run: |
        dotnet tool install --global dotnet-sonarscanner

    # Install ReportGenerator tool
    - name: Install ReportGenerator
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool

    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore SneakerSZN/SneakerSZN.sln

    # SonarQube Begin Analysis
    - name: SonarQube Analysis Begin
      run: |
        dotnet sonarscanner begin /k:"Deantjeee_SneakerSZN-Backend" \
          /o:"deantjeee" \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.sources="SneakerSZN/SneakerSZN" \
          /d:sonar.tests="SneakerSZN/SneakerSZN.Tests" \
          /d:sonar.cs.opencover.reportsPaths="TestResults/**/coverage.cobertura.xml" \
          /d:sonar.exclusions="**/bin/**,**/obj/**,**/TestResults/**,**/*.g.cs,**/*.Designer.cs"

    # Build the project
    - name: Build the project
      run: dotnet build SneakerSZN/SneakerSZN.sln --no-restore --configuration Release

    # Run tests and generate coverage
    - name: Run Tests and Generate Coverage
      run: |
        # Ensure TestResults directory exists
        mkdir -p TestResults
        dotnet test SneakerSZN/SneakerSZN.sln \
          --no-build \
          --configuration Release \
          --logger "trx;LogFileName=TestResults/test_results.trx" \
          /p:CollectCoverage=true \
          /p:CoverletOutput=TestResults/ \
          /p:CoverletOutputFormat=cobertura

        # List the contents of the TestResults directory to check the coverage report location
        echo "Contents of TestResults directory:"
        ls -R TestResults/

    # Generate HTML coverage report
    - name: Generate HTML Coverage Report
      run: |
        mkdir -p CoverageReports
        # Check if the coverage report exists
        if [ -f "TestResults/coverage.cobertura.xml" ]; then
          echo "Coverage report found, generating HTML report."
          reportgenerator \
            -reports:TestResults/coverage.cobertura.xml \
            -targetdir:CoverageReports \
            -reporttypes:Html
        else
          echo "Coverage report not found! Please check your coverage generation step."
          exit 1
        fi

    # SonarQube End Analysis
    - name: SonarQube Analysis End
      run: |
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push Docker image
    - name: Build and Push Docker Image
      run: |
        docker build -t deanmichiels/sneakerbackend:latest -f SneakerSZN/SneakerSZN/Dockerfile SneakerSZN
        docker push deanmichiels/sneakerbackend:latest
